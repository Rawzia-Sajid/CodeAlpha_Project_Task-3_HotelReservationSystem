/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Hotel_Reservation_System;

import javax.swing.table.DefaultTableModel;
import java.sql.Connection;
import javax.swing.JOptionPane;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.sql.ResultSet;
import java.sql.Statement;
import java.lang.String;

/**
 *
 * @author Ukasha Gamer
 */
public class AllRoomsD extends javax.swing.JFrame {

    /**
     * Creates new form AllRoomsD
     */
    public AllRoomsD() {
        initComponents();

        setRoomsDataToTable();
    }

    DefaultTableModel model;

    public void setRoomsDataToTable() {
        try {
// Establish connection with the MySQL database
            Connection con = DBConnection.getConnection();
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery("select * from rooms");

            while (rs.next()) {
                String roomId = rs.getString("room_id");
                String roomNumber = rs.getString("room_number");
                String roomType = rs.getString("room_type");
                String price = rs.getString("price_per_night");
                String status = rs.getString("availability_status");

                Object obj[] = {roomId, roomNumber, roomType, price, status};
                model = (DefaultTableModel) tblRoom.getModel();
                model.addRow(obj);

            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // validate room type combo box 
    private boolean validateRoomType() {
        String selectedRoomType = (String) cbRoomType.getSelectedItem();

        if (selectedRoomType == null || selectedRoomType.trim().isEmpty() || selectedRoomType.equals("Select Room type...")) {
            JOptionPane.showMessageDialog(null, "Please select a room type.");
            return false;
        }
        return true;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        AllAvailableRoomsbtn = new javax.swing.JButton();
        Resetbtn = new necesario.RSMaterialButtonCircle();
        Searchbtn = new necesario.RSMaterialButtonCircle();
        jCTextField1 = new app.bolivia.swing.JCTextField();
        jCTextField2 = new app.bolivia.swing.JCTextField();
        cbRoomType = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblRoom = new rojeru_san.complementos.RSTableMetro();
        booknowbtn = new necesario.RSMaterialButtonCircle();
        jPanel3 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(51, 0, 0));
        jPanel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel2MouseClicked(evt);
            }
        });
        jPanel2.setLayout(null);

        jLabel1.setFont(new java.awt.Font("Stencil", 1, 40)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Explore Our Room Selection");
        jPanel2.add(jLabel1);
        jLabel1.setBounds(400, 60, 640, 60);

        jPanel6.setBackground(new java.awt.Color(0, 0, 0));
        jPanel6.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel9.setFont(new java.awt.Font("Verdana", 0, 10)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/AddNewBookIcons/icons8_Rewind_48px.png"))); // NOI18N
        jLabel9.setText(" ");
        jLabel9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel9MouseClicked(evt);
            }
        });
        jPanel6.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 60, 30));

        jPanel2.add(jPanel6);
        jPanel6.setBounds(0, 0, 90, 60);

        jLabel4.setText(" ");
        jPanel2.add(jLabel4);
        jLabel4.setBounds(0, 6, 533, 224);

        jLabel3.setText("jLabel3");
        jPanel2.add(jLabel3);
        jLabel3.setBounds(17304, 123, 348, 26);

        jLabel5.setFont(new java.awt.Font("Serif", 0, 20)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("- Find the Perfect Space for Your Stay, Tailored to Your Comfort and Style ");
        jPanel2.add(jLabel5);
        jLabel5.setBounds(653, 122, 610, 27);

        jLabel6.setBackground(new java.awt.Color(0, 0, 0));
        jLabel6.setFont(new java.awt.Font("Verdana", 1, 24)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("X");
        jPanel2.add(jLabel6);
        jLabel6.setBounds(1339, 16, 38, 30);

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(-10, -10, 1600, 230));

        jPanel4.setBackground(new java.awt.Color(250, 240, 230));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Serif", 0, 18)); // NOI18N
        jLabel2.setText("Search Room Type :");
        jPanel4.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, 162, 23));

        AllAvailableRoomsbtn.setBackground(new java.awt.Color(160, 82, 45));
        AllAvailableRoomsbtn.setFont(new java.awt.Font("Serif", 0, 18)); // NOI18N
        AllAvailableRoomsbtn.setForeground(new java.awt.Color(255, 255, 255));
        AllAvailableRoomsbtn.setText(" Show All Available Rooms");
        AllAvailableRoomsbtn.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(78, 52, 46)));
        AllAvailableRoomsbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AllAvailableRoomsbtnActionPerformed(evt);
            }
        });
        jPanel4.add(AllAvailableRoomsbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(1052, 19, 234, 42));

        Resetbtn.setBackground(new java.awt.Color(0, 0, 0));
        Resetbtn.setText(" Reset");
        Resetbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ResetbtnActionPerformed(evt);
            }
        });
        jPanel4.add(Resetbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 20, 150, 43));

        Searchbtn.setBackground(new java.awt.Color(0, 0, 0));
        Searchbtn.setText(" Search");
        Searchbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchbtnActionPerformed(evt);
            }
        });
        jPanel4.add(Searchbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(499, 20, 150, 44));

        jCTextField1.setText(" ");
        jCTextField1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jCTextField1.setPlaceholder(" Enter Customer Name...");
        jCTextField1.setSelectionColor(new java.awt.Color(153, 0, 0));
        jPanel4.add(jCTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 240, 320, 30));

        jCTextField2.setText(" ");
        jCTextField2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jCTextField2.setPlaceholder(" Enter Customer Name...");
        jCTextField2.setSelectionColor(new java.awt.Color(153, 0, 0));
        jPanel4.add(jCTextField2, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 240, 320, 30));

        cbRoomType.setFont(new java.awt.Font("Serif", 0, 14)); // NOI18N
        cbRoomType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Room Type...", "Single", "Double Deluxe", "Presidential Suite", "Family Room", "Double", "Penthouse Suite", "Executive Suite", "Luxury Suite", "Junior Suite", "Royal Suite" }));
        jPanel4.add(cbRoomType, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 20, 280, 40));

        jPanel1.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 240, 1380, 80));

        tblRoom.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                " Room Id", " Room No", " Room Type", " Price Per Night", " Status"
            }
        ));
        tblRoom.setColorBackgoundHead(new java.awt.Color(51, 0, 0));
        tblRoom.setColorFilasBackgound2(new java.awt.Color(139, 69, 19));
        tblRoom.setColorFilasForeground1(new java.awt.Color(0, 0, 0));
        tblRoom.setColorFilasForeground2(new java.awt.Color(0, 0, 0));
        tblRoom.setColorSelBackgound(new java.awt.Color(0, 0, 0));
        tblRoom.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        tblRoom.setFuenteFilas(new java.awt.Font("Serif", 1, 18)); // NOI18N
        tblRoom.setFuenteHead(new java.awt.Font("Stencil", 0, 18)); // NOI18N
        tblRoom.setRowHeight(25);
        jScrollPane1.setViewportView(tblRoom);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 360, 930, 360));

        booknowbtn.setBackground(new java.awt.Color(78, 52, 46));
        booknowbtn.setText(" Book Now");
        booknowbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                booknowbtnActionPerformed(evt);
            }
        });
        jPanel1.add(booknowbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(1080, 670, 190, 50));

        jPanel3.setBackground(new java.awt.Color(0, 0, 0));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(-10, 220, 1390, 20));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(-1, 1, 1380, 770));

        setSize(new java.awt.Dimension(1380, 770));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel9MouseClicked
        // TODO add your handling code here:
        DashBoard db = new DashBoard();
        db.setVisible(true);
        dispose();
    }//GEN-LAST:event_jLabel9MouseClicked

    private void jPanel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel2MouseClicked
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jPanel2MouseClicked

    private void AllAvailableRoomsbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AllAvailableRoomsbtnActionPerformed
        // TODO add your handling code here:
        // Clear the table
        DefaultTableModel model = (DefaultTableModel) tblRoom.getModel();
        model.setRowCount(0);

        // Query database and populate table
        try (
                Connection con = DBConnection.getConnection(); PreparedStatement stmt = con.prepareStatement("SELECT * FROM rooms WHERE availability_status = 'Available'")) {
            ResultSet rs = stmt.executeQuery();

            while (rs.next()) {
                String roomId = rs.getString("room_id");
                String roomNumber = rs.getString("room_number");
                String roomType = rs.getString("room_type");
                String price = rs.getString("price_per_night");
                String status = rs.getString("availability_status");

                Object obj[] = {roomId, roomNumber, roomType, price, status};
                model = (DefaultTableModel) tblRoom.getModel();
                model.addRow(obj);

            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_AllAvailableRoomsbtnActionPerformed

    private void ResetbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ResetbtnActionPerformed
        // TODO add your handling code here:

        // Clear the selection in the room type combo box
        cbRoomType.setSelectedIndex(0); // Assuming "Select Room Type..." is at index 0

        // Clear the table
        DefaultTableModel model = (DefaultTableModel) tblRoom.getModel();
        model.setRowCount(0); // Remove all rows from the table

        // Query database and populate table with all records
        try (Connection con = DBConnection.getConnection(); PreparedStatement stmt = con.prepareStatement("SELECT * FROM rooms")) {
            ResultSet rs = stmt.executeQuery();

            while (rs.next()) {
                String roomId = rs.getString("room_id");
                String roomNumber = rs.getString("room_number");
                String roomType = rs.getString("room_type");
                String price = rs.getString("price_per_night");
                String status = rs.getString("availability_status");

                Object[] row = {roomId, roomNumber, roomType, price, status};
                model.addRow(row);
            }
        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "An error occurred while retrieving data.", "Database Error", JOptionPane.ERROR_MESSAGE);
        }


    }//GEN-LAST:event_ResetbtnActionPerformed

    private void SearchbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchbtnActionPerformed
        // TODO add your handling code here:
        if (validateRoomType()) {
            String selectedRoomType = (String) cbRoomType.getSelectedItem();

            // Clear the table
            DefaultTableModel model = (DefaultTableModel) tblRoom.getModel();
            model.setRowCount(0);

            // Query database and populate table
            try (
                    Connection con = DBConnection.getConnection(); PreparedStatement stmt = con.prepareStatement("SELECT * FROM rooms WHERE room_type = ? AND availability_status = 'Available'")) {
                stmt.setString(1, selectedRoomType);
                ResultSet rs = stmt.executeQuery();

                boolean roomsFound = false; // Flag to check if any rooms are found

                while (rs.next()) {
                    // Fetch room details from result set
                    String roomId = rs.getString("room_id");
                    String roomNumber = rs.getString("room_number");
                    String roomType = rs.getString("room_type");
                    String price = rs.getString("price_per_night");
                    String status = rs.getString("availability_status");

                    Object[] row = {roomId, roomNumber, roomType, price, status};
                    model.addRow(row);

                    roomsFound = true; // Set flag to true if at least one room is found
                }

                if (!roomsFound) {
                    JOptionPane.showMessageDialog(this, "No rooms available for the selected type.", "No Results", JOptionPane.INFORMATION_MESSAGE);
                }
            } catch (SQLException e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(this, "An error occurred while retrieving data.", "Database Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_SearchbtnActionPerformed

    private void booknowbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_booknowbtnActionPerformed
        // TODO add your handling code here:

        // Get the selected row from the table
        int selectedRow = tblRoom.getSelectedRow();

        if (selectedRow != -1) {
            // Retrieve room details from the selected row
            String roomType = tblRoom.getValueAt(selectedRow, 2).toString();
            String roomNumber = tblRoom.getValueAt(selectedRow, 1).toString();
            String price = tblRoom.getValueAt(selectedRow, 3).toString();

            // Pass these details to the MakeReservations page
            MakeReservations reservations = new MakeReservations(roomNumber, roomType );
            reservations.setVisible(true);
            this.dispose(); // Close the current page if needed
        } else {
            JOptionPane.showMessageDialog(this, "Please select a room to book.", "Selection Error", JOptionPane.WARNING_MESSAGE);
        }


    }//GEN-LAST:event_booknowbtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AllRoomsD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AllRoomsD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AllRoomsD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AllRoomsD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AllRoomsD().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AllAvailableRoomsbtn;
    private necesario.RSMaterialButtonCircle Resetbtn;
    private necesario.RSMaterialButtonCircle Searchbtn;
    private necesario.RSMaterialButtonCircle booknowbtn;
    private javax.swing.JComboBox<String> cbRoomType;
    private app.bolivia.swing.JCTextField jCTextField1;
    private app.bolivia.swing.JCTextField jCTextField2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private rojeru_san.complementos.RSTableMetro tblRoom;
    // End of variables declaration//GEN-END:variables
}
